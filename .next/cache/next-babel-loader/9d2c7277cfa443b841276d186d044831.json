{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/work/100ndup/website/pages/projects/[pid].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { LazyImage } from \"../../components/lazyImage\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst ProjectPage = props => {\n  const [currentImage, setCurrentImage] = React.useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = React.useState(false);\n  const openLightbox = React.useCallback(index => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  React.useEffect(() => {\n    console.log(props.projects);\n  });\n  const photos = props.photos;\n  const newPhotos = photos.map(photo => {\n    return {\n      id: photo.id,\n      name: photo.name,\n      source: photo.url\n    };\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3564203654\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-3564203654\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.Title), __jsx(\"div\", {\n    className: \"jsx-3564203654\" + \" \" + \"photo-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, newPhotos.map((photo, index) => __jsx(LazyImage, {\n    src: photo.source,\n    alt: photo.name,\n    key: index,\n    onclick: openLightbox.bind(null, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))), __jsx(ModalGateway, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, viewerIsOpen ? __jsx(Modal, {\n    onClose: closeLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Carousel, {\n    currentIndex: currentImage,\n    views: newPhotos && newPhotos.map(x => _objectSpread({}, x)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })) : null), __jsx(_JSXStyle, {\n    id: \"3564203654\",\n    __self: this\n  }, \".container.jsx-3564203654{margin:200px auto 0 auto;max-width:1080px;}.container.jsx-3564203654 h1.jsx-3564203654{text-align:center;font-size:55px;margin-bottom:50px;}.photo-grid.jsx-3564203654{display:grid;gap:1rem;grid-template-columns:repeat(auto-fit,minmax(400px,1fr));}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL3dvcmsvMTAwbmR1cC93ZWJzaXRlL3BhZ2VzL3Byb2plY3RzL1twaWRdLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RXdCLEFBRzhDLEFBSVAsQUFLTCxhQUNKLEtBTE0sSUFNNEMsR0FWMUMsUUFLRSxTQUp2QixVQUtBLDJCQUtBIiwiZmlsZSI6Ii9Vc2Vycy9tYWMvRG9jdW1lbnRzL3dvcmsvMTAwbmR1cC93ZWJzaXRlL3BhZ2VzL3Byb2plY3RzL1twaWRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0xheW91dFwiXG5pbXBvcnQgQ2Fyb3VzZWwsIHsgTW9kYWwsIE1vZGFsR2F0ZXdheSB9IGZyb20gXCJyZWFjdC1pbWFnZXNcIlxuaW1wb3J0IHsgTGF6eUltYWdlIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvbGF6eUltYWdlXCJcbmltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCJcblxuaW50ZXJmYWNlIFBob3RvIHtcbiAgICBpZDogbnVtYmVyXG4gICAgbmFtZTogc3RyaW5nXG4gICAgdXJsOiBzdHJpbmdcbn1cbmludGVyZmFjZSBQcm9qZWN0IHtcbiAgICBpZDogbnVtYmVyXG4gICAgVGl0bGU6IHN0cmluZ1xuICAgIGNyZWF0ZWRfYXQ6IHN0cmluZ1xuICAgIHVwZGF0ZWRfYXQ6IHN0cmluZ1xuICAgIHBob3RvczogQXJyYXk8UGhvdG8+XG59XG5cbmNvbnN0IFByb2plY3RQYWdlID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IFtjdXJyZW50SW1hZ2UsIHNldEN1cnJlbnRJbWFnZV0gPSBSZWFjdC51c2VTdGF0ZSgwKVxuICAgIGNvbnN0IFt2aWV3ZXJJc09wZW4sIHNldFZpZXdlcklzT3Blbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcbiAgICBjb25zdCBvcGVuTGlnaHRib3ggPSBSZWFjdC51c2VDYWxsYmFjayhpbmRleCA9PiB7XG4gICAgICAgIHNldEN1cnJlbnRJbWFnZShpbmRleClcbiAgICAgICAgc2V0Vmlld2VySXNPcGVuKHRydWUpXG4gICAgfSwgW10pXG5cbiAgICBjb25zdCBjbG9zZUxpZ2h0Ym94ID0gKCkgPT4ge1xuICAgICAgICBzZXRDdXJyZW50SW1hZ2UoMClcbiAgICAgICAgc2V0Vmlld2VySXNPcGVuKGZhbHNlKVxuICAgIH1cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhwcm9wcy5wcm9qZWN0cylcbiAgICB9KVxuICAgIGNvbnN0IHBob3RvczogUGhvdG9bXSA9IHByb3BzLnBob3Rvc1xuICAgIGNvbnN0IG5ld1Bob3RvcyA9IHBob3Rvcy5tYXAocGhvdG8gPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IHBob3RvLmlkLFxuICAgICAgICAgICAgbmFtZTogcGhvdG8ubmFtZSxcbiAgICAgICAgICAgIHNvdXJjZTogcGhvdG8udXJsXG4gICAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxoMT57cHJvcHMuVGl0bGV9PC9oMT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBob3RvLWdyaWRcIj5cbiAgICAgICAgICAgICAgICAgICAge25ld1Bob3Rvcy5tYXAoKHBob3RvLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPExhenlJbWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz17cGhvdG8uc291cmNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdD17cGhvdG8ubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9e29wZW5MaWdodGJveC5iaW5kKG51bGwsIGluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8TW9kYWxHYXRld2F5PlxuICAgICAgICAgICAgICAgIHt2aWV3ZXJJc09wZW4gPyAoXG4gICAgICAgICAgICAgICAgICAgIDxNb2RhbCBvbkNsb3NlPXtjbG9zZUxpZ2h0Ym94fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDYXJvdXNlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleD17Y3VycmVudEltYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdzPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UGhvdG9zICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Bob3Rvcy5tYXAoeCA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ueFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L01vZGFsPlxuICAgICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgPC9Nb2RhbEdhdGV3YXk+XG5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAyMDBweCBhdXRvIDAgYXV0bztcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDgwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5jb250YWluZXIgaDEge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNTVweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBob3RvLWdyaWQge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgICAgICAgICBnYXA6IDFyZW07XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoNDAwcHgsIDFmcikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKVxufVxuXG5Qcm9qZWN0UGFnZS5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBjb250ZXh0ID0+IHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgZmV0Y2goXG4gICAgICAgIGBodHRwczovL21vcm5pbmctc2hvcmUtMzE3OTkuaGVyb2t1YXBwLmNvbS9wcm9qZWN0cy8ke2NvbnRleHQucXVlcnkucGlkfWBcbiAgICApXG4gICAgY29uc3QgcHJvamVjdHMgPSBkYXRhLmpzb24oKVxuICAgIHJldHVybiBwcm9qZWN0c1xufVxuXG5leHBvcnQgZGVmYXVsdCBQcm9qZWN0UGFnZVxuIl19 */\\n/*@ sourceURL=/Users/mac/Documents/work/100ndup/website/pages/projects/[pid].tsx */\"));\n};\n\nProjectPage.getInitialProps = async context => {\n  const data = await fetch(`https://morning-shore-31799.herokuapp.com/projects/${context.query.pid}`);\n  const projects = data.json();\n  return projects;\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/mac/Documents/work/100ndup/website/pages/projects/[pid].tsx"],"names":["React","Layout","Carousel","Modal","ModalGateway","LazyImage","fetch","ProjectPage","props","currentImage","setCurrentImage","useState","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","closeLightbox","useEffect","console","log","projects","photos","newPhotos","map","photo","id","name","source","url","Title","bind","x","getInitialProps","context","data","query","pid","json"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport Layout from \"../../components/Layout\"\nimport Carousel, { Modal, ModalGateway } from \"react-images\"\nimport { LazyImage } from \"../../components/lazyImage\"\nimport fetch from \"isomorphic-unfetch\"\n\ninterface Photo {\n    id: number\n    name: string\n    url: string\n}\ninterface Project {\n    id: number\n    Title: string\n    created_at: string\n    updated_at: string\n    photos: Array<Photo>\n}\n\nconst ProjectPage = props => {\n    const [currentImage, setCurrentImage] = React.useState(0)\n    const [viewerIsOpen, setViewerIsOpen] = React.useState(false)\n    const openLightbox = React.useCallback(index => {\n        setCurrentImage(index)\n        setViewerIsOpen(true)\n    }, [])\n\n    const closeLightbox = () => {\n        setCurrentImage(0)\n        setViewerIsOpen(false)\n    }\n    React.useEffect(() => {\n        console.log(props.projects)\n    })\n    const photos: Photo[] = props.photos\n    const newPhotos = photos.map(photo => {\n        return {\n            id: photo.id,\n            name: photo.name,\n            source: photo.url\n        }\n    })\n    return (\n        <Layout>\n            <div className=\"container\">\n                <h1>{props.Title}</h1>\n                <div className=\"photo-grid\">\n                    {newPhotos.map((photo, index) => (\n                        <LazyImage\n                            src={photo.source}\n                            alt={photo.name}\n                            key={index}\n                            onclick={openLightbox.bind(null, index)}\n                        />\n                    ))}\n                </div>\n            </div>\n            <ModalGateway>\n                {viewerIsOpen ? (\n                    <Modal onClose={closeLightbox}>\n                        <Carousel\n                            currentIndex={currentImage}\n                            views={\n                                newPhotos &&\n                                newPhotos.map(x => ({\n                                    ...x\n                                }))\n                            }\n                        />\n                    </Modal>\n                ) : null}\n            </ModalGateway>\n\n            <style jsx>{`\n                .container {\n                    margin: 200px auto 0 auto;\n                    max-width: 1080px;\n                }\n                .container h1 {\n                    text-align: center;\n                    font-size: 55px;\n                    margin-bottom: 50px;\n                }\n                .photo-grid {\n                    display: grid;\n                    gap: 1rem;\n                    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n                }\n            `}</style>\n        </Layout>\n    )\n}\n\nProjectPage.getInitialProps = async context => {\n    const data = await fetch(\n        `https://morning-shore-31799.herokuapp.com/projects/${context.query.pid}`\n    )\n    const projects = data.json()\n    return projects\n}\n\nexport default ProjectPage\n"]},"metadata":{},"sourceType":"module"}