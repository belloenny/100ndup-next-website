{"ast":null,"code":"import { useEffect } from \"react\";\nexport const useIntersectionObserver = ({\n  root,\n  target,\n  onIntersect,\n  threshold = 1.0,\n  rootMargin = \"0px\"\n}) => {\n  useEffect(() => {\n    if (!root) {\n      console.warn(`No \"root\" specified for Intersection Observer.\n\nuseIntersectionObserver needs to be called with an initial configuration,\nwhere you'd pass in a \"root\" value (a React Ref using the useRef hook)\nto an element that contains a child that would intersect with it: a \ncontainer that's aware of its children.\n\nPlease add a root option and try again.\n\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer`);\n      return;\n    }\n\n    const observer = new IntersectionObserver(onIntersect, {\n      root: root.current,\n      rootMargin,\n      threshold\n    });\n\n    if (!target) {\n      console.warn(`No target specified for Intersection Observer.\n\nuseIntersectionObserver needs to be called with an initial configuration,\nwhere you'd pass in a \"target\" value (a React Ref using the useRef hook) that\nrepresents an element that is contained inside a root element that will be\ntracked.\n\nPlease add a target option and try again.\n\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer`);\n      return;\n    }\n\n    observer.observe(target.current); // Let's clean up after ourselves.\n\n    return () => {\n      observer.unobserve(target.current);\n    };\n  });\n};","map":{"version":3,"sources":["/Users/mac/Documents/work/100ndup/website/hooks/intersectionObserver.ts"],"names":["useEffect","useIntersectionObserver","root","target","onIntersect","threshold","rootMargin","console","warn","observer","IntersectionObserver","current","observe","unobserve"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CAAC;AACtCC,EAAAA,IADsC;AAEtCC,EAAAA,MAFsC;AAGtCC,EAAAA,WAHsC;AAItCC,EAAAA,SAAS,GAAG,GAJ0B;AAKtCC,EAAAA,UAAU,GAAG;AALyB,CAAD,KAMjC;AACJN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,IAAL,EAAW;AACTK,MAAAA,OAAO,CAACC,IAAR,CACG;;;;;;;;;wHADH;AAYA;AACD;;AAED,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBN,WAAzB,EAAsC;AACrDF,MAAAA,IAAI,EAAEA,IAAI,CAACS,OAD0C;AAErDL,MAAAA,UAFqD;AAGrDD,MAAAA;AAHqD,KAAtC,CAAjB;;AAMA,QAAI,CAACF,MAAL,EAAa;AACXI,MAAAA,OAAO,CAACC,IAAR,CACG;;;;;;;;;wHADH;AAYA;AACD;;AAEDC,IAAAA,QAAQ,CAACG,OAAT,CAAiBT,MAAM,CAACQ,OAAxB,EAvCc,CAyCd;;AACA,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAACI,SAAT,CAAmBV,MAAM,CAACQ,OAA1B;AACD,KAFD;AAGD,GA7CQ,CAAT;AA8CD,CArDM","sourcesContent":["import { useEffect } from \"react\";\n\nexport const useIntersectionObserver = ({\n  root,\n  target,\n  onIntersect,\n  threshold = 1.0,\n  rootMargin = \"0px\"\n}) => {\n  useEffect(() => {\n    if (!root) {\n      console.warn(\n        `No \"root\" specified for Intersection Observer.\n\nuseIntersectionObserver needs to be called with an initial configuration,\nwhere you'd pass in a \"root\" value (a React Ref using the useRef hook)\nto an element that contains a child that would intersect with it: a \ncontainer that's aware of its children.\n\nPlease add a root option and try again.\n\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer`\n      );\n      return;\n    }\n\n    const observer = new IntersectionObserver(onIntersect, {\n      root: root.current,\n      rootMargin,\n      threshold\n    });\n\n    if (!target) {\n      console.warn(\n        `No target specified for Intersection Observer.\n\nuseIntersectionObserver needs to be called with an initial configuration,\nwhere you'd pass in a \"target\" value (a React Ref using the useRef hook) that\nrepresents an element that is contained inside a root element that will be\ntracked.\n\nPlease add a target option and try again.\n\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer`\n      );\n      return;\n    }\n\n    observer.observe(target.current);\n\n    // Let's clean up after ourselves.\n    return () => {\n      observer.unobserve(target.current);\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}