{"ast":null,"code":"import { useEffect } from \"react\";\nexport var useIntersectionObserver = function useIntersectionObserver(_ref) {\n  var root = _ref.root,\n      target = _ref.target,\n      onIntersect = _ref.onIntersect,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 1.0 : _ref$threshold,\n      _ref$rootMargin = _ref.rootMargin,\n      rootMargin = _ref$rootMargin === void 0 ? \"0px\" : _ref$rootMargin;\n  useEffect(function () {\n    if (!root) {\n      console.warn(\"No \\\"root\\\" specified for Intersection Observer.\\n\\nuseIntersectionObserver needs to be called with an initial configuration,\\nwhere you'd pass in a \\\"root\\\" value (a React Ref using the useRef hook)\\nto an element that contains a child that would intersect with it: a \\ncontainer that's aware of its children.\\n\\nPlease add a root option and try again.\\n\\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer\");\n      return;\n    }\n\n    var observer = new IntersectionObserver(onIntersect, {\n      root: root.current,\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n\n    if (!target) {\n      console.warn(\"No target specified for Intersection Observer.\\n\\nuseIntersectionObserver needs to be called with an initial configuration,\\nwhere you'd pass in a \\\"target\\\" value (a React Ref using the useRef hook) that\\nrepresents an element that is contained inside a root element that will be\\ntracked.\\n\\nPlease add a target option and try again.\\n\\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer\");\n      return;\n    }\n\n    observer.observe(target.current); // Let's clean up after ourselves.\n\n    return function () {\n      observer.unobserve(target.current);\n    };\n  });\n};","map":{"version":3,"sources":["/Users/mac/Documents/work/100ndup/website/hooks/intersectionObserver.ts"],"names":["useEffect","useIntersectionObserver","root","target","onIntersect","threshold","rootMargin","console","warn","observer","IntersectionObserver","current","observe","unobserve"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAMjC;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,4BAFJC,SAEI;AAAA,MAFJA,SAEI,+BAFQ,GAER;AAAA,6BADJC,UACI;AAAA,MADJA,UACI,gCADS,KACT;AACJN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACE,IAAL,EAAW;AACTK,MAAAA,OAAO,CAACC,IAAR;AAYA;AACD;;AAED,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBN,WAAzB,EAAsC;AACrDF,MAAAA,IAAI,EAAEA,IAAI,CAACS,OAD0C;AAErDL,MAAAA,UAAU,EAAVA,UAFqD;AAGrDD,MAAAA,SAAS,EAATA;AAHqD,KAAtC,CAAjB;;AAMA,QAAI,CAACF,MAAL,EAAa;AACXI,MAAAA,OAAO,CAACC,IAAR;AAYA;AACD;;AAEDC,IAAAA,QAAQ,CAACG,OAAT,CAAiBT,MAAM,CAACQ,OAAxB,EAvCc,CAyCd;;AACA,WAAO,YAAM;AACXF,MAAAA,QAAQ,CAACI,SAAT,CAAmBV,MAAM,CAACQ,OAA1B;AACD,KAFD;AAGD,GA7CQ,CAAT;AA8CD,CArDM","sourcesContent":["import { useEffect } from \"react\";\n\nexport const useIntersectionObserver = ({\n  root,\n  target,\n  onIntersect,\n  threshold = 1.0,\n  rootMargin = \"0px\"\n}) => {\n  useEffect(() => {\n    if (!root) {\n      console.warn(\n        `No \"root\" specified for Intersection Observer.\n\nuseIntersectionObserver needs to be called with an initial configuration,\nwhere you'd pass in a \"root\" value (a React Ref using the useRef hook)\nto an element that contains a child that would intersect with it: a \ncontainer that's aware of its children.\n\nPlease add a root option and try again.\n\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer`\n      );\n      return;\n    }\n\n    const observer = new IntersectionObserver(onIntersect, {\n      root: root.current,\n      rootMargin,\n      threshold\n    });\n\n    if (!target) {\n      console.warn(\n        `No target specified for Intersection Observer.\n\nuseIntersectionObserver needs to be called with an initial configuration,\nwhere you'd pass in a \"target\" value (a React Ref using the useRef hook) that\nrepresents an element that is contained inside a root element that will be\ntracked.\n\nPlease add a target option and try again.\n\nMore info: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer`\n      );\n      return;\n    }\n\n    observer.observe(target.current);\n\n    // Let's clean up after ourselves.\n    return () => {\n      observer.unobserve(target.current);\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}