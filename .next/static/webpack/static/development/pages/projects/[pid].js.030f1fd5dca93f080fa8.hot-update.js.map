{"version":3,"file":"static/webpack/static/development/pages/projects/[pid].js.030f1fd5dca93f080fa8.hot-update.js","sources":["webpack:///./pages/projects/[pid].tsx"],"sourcesContent":["import * as React from \"react\"\nimport { NextPage } from \"next\"\nimport Layout from \"../../components/Layout\"\nimport { useRouter } from \"next/router\"\nimport Carousel, { Modal, ModalGateway } from \"react-images\"\nimport { LazyImage } from \"../../components/lazyImage\"\nimport fetch from \"isomorphic-unfetch\"\nimport { readSync } from \"fs\"\n\ninterface Photo {\n    id: number\n    name: string\n    url: string\n}\ninterface Project {\n    id: number\n    Title: string\n    created_at: string\n    updated_at: string\n    photos: Array<Photo>\n}\n\n\nconst ProjectPage = props => {\n    const [currentImage, setCurrentImage] = React.useState(0)\n    const [viewerIsOpen, setViewerIsOpen] = React.useState(false)\n    const openLightbox = React.useCallback(index => {\n        setCurrentImage(index)\n        setViewerIsOpen(true)\n    }, [])\n\n    const closeLightbox = () => {\n        setCurrentImage(0)\n        setViewerIsOpen(false)\n    }\n    React.useEffect(() => {\n        console.log(props.projects)\n    })\n    const projects = props.projects\n    return (\n        <Layout>\n            <div className=\"container\">\n                <h1></h1>\n                <div className=\"photo-grid\">\n                    {\n    \n                    projects.photos.map((photo, index) => (\n                        <LazyImage\n                            src={photo.url}\n                            alt={photo.name}\n                            key={index}\n                            onclick={openLightbox.bind(null, index)}\n                        />\n                    ))}\n                </div>\n            </div>\n            {/* <ModalGateway>\n                {viewerIsOpen ? (\n                    <Modal onClose={closeLightbox}>\n                        <Carousel\n                            currentIndex={currentImage}\n                            views={\n                                \n                                projects &&\n                                //@ts-ignore\n                                projects.photos.map(x => ({\n                                    ...x\n                                }))\n                            }\n                        />\n                    </Modal>\n                ) : null}\n            </ModalGateway> */}\n\n            <style jsx>{`\n                .container {\n                    margin: 200px auto 0 auto;\n                    max-width: 1080px;\n                }\n                .container h1 {\n                    text-align: center;\n                    font-size: 55px;\n                    margin-bottom: 50px;\n                }\n                .photo-grid {\n                    display: grid;\n                    gap: 1rem;\n                    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n                }\n            `}</style>\n        </Layout>\n    )\n}\n\nProjectPage.getInitialProps = async (context) => {\n    const data = await fetch(\n        `https://morning-shore-31799.herokuapp.com/projects/${context.query.pid}`\n    )\n    const projects  = data.json()\n    return projects\n}\n\nexport default ProjectPage\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAGA;AACA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AANA;AAAA;AAAA;AAoDA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;A","sourceRoot":""}